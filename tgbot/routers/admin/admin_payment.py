# - *- coding: utf- 8 - *-
from aiogram import Router, Bot, F
from aiogram.filters import StateFilter
from aiogram.types import CallbackQuery, Message
from tgbot.services.api_cryptobot import CryptoBotAPI
from tgbot.database.db_payments import Paymentsx
from tgbot.keyboards.inline_admin import payment_method_finl, payment_yoomoney_finl, close_finl, payment_cryptobot_finl
from tgbot.services.api_yoomoney import YoomoneyAPI
from tgbot.services.api_cryptobot import CryptoBotAPI
from tgbot.utils.const_functions import ded
from tgbot.utils.misc.bot_models import FSM, ARS

router = Router(name=__name__)


################################################################################
############################ –í–´–ë–û–† –°–ü–û–°–û–ë–ê –ü–û–ü–û–õ–ù–ï–ù–ò–Ø ##########################
# –û—Ç–∫—Ä—ã—Ç–∏–µ —Å–ø–æ—Å–æ–±–æ–≤ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
@router.message(F.text == "üñ≤ –°–ø–æ—Å–æ–±—ã –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–π")
async def payment_methods(message: Message, bot: Bot, state: FSM, arSession: ARS):
    await state.clear()

    await message.answer(
        "<b>üñ≤ –í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–±—ã –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–π</b>",
        reply_markup=payment_method_finl(),
    )


# –í–∫–ª—é—á–µ–Ω–∏–µ/–≤—ã–∫–ª—é—á–µ–Ω–∏–µ —Å–∞–º–∏—Ö —Å–ø–æ—Å–æ–±–æ–≤ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
@router.callback_query(F.data.startswith("payment_method:"))
async def payment_methods_edit(call: CallbackQuery, bot: Bot, state: FSM, arSession: ARS):
    way_pay = call.data.split(":")[1]
    way_status = call.data.split(":")[2]

    get_payment = Paymentsx.get()

    if way_pay == "Yoomoney":
        if way_status == "True" and get_payment.yoomoney_token == "None":
            return await call.answer("‚ùó –î–æ–±–∞–≤—å—Ç–µ –ÆMoney –∫–æ—à–µ–ª—ë–∫ –ø–µ—Ä–µ–¥ –≤–∫–ª—é—á–µ–Ω–∏–µ–º –°–ø–æ—Å–æ–±–æ–≤ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–π", True)

        Paymentsx.update(way_yoomoney=way_status)
    elif way_pay == "CryptoBot":
        if way_status == "True" and get_payment.crypto_bot_token == "None":
            return await call.answer("‚ùó –î–æ–±–∞–≤—å—Ç–µ —Ç–æ–∫–µ–Ω CryptoBot –ø–µ—Ä–µ–¥ –≤–∫–ª—é—á–µ–Ω–∏–µ–º –°–ø–æ—Å–æ–±–æ–≤ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–π", True)

        Paymentsx.update(way_crypto_bot=way_status)

    await call.message.edit_text(
        "<b>üñ≤ –í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–±—ã –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–π</b>",
        reply_markup=payment_method_finl(),
    )


# –û—Ç–∫—Ä—ã—Ç–∏–µ –ÆMoney
@router.message(F.text == "üîÆ –ÆMoney")
async def payment_yoomoney_open(message: Message, bot: Bot, state: FSM, arSession: ARS):
    await state.clear()

    await message.answer(
        "<b>üîÆ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ - –ÆMoney</b>",
        reply_markup=payment_yoomoney_finl(),
    )


# –û—Ç–∫—Ä—ã—Ç–∏–µ CryptoBot
@router.message(F.text == "ü§ñ CryptoBot")
async def payment_cryptobot_open(message: Message, bot: Bot, state: FSM, arSession: ARS):
    await state.clear()

    await message.answer(
        "<b>ü§ñ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ - CryptoBot</b>",
        reply_markup=payment_cryptobot_finl(),
    )


################################################################################
#################################### CryptoBot #################################
# –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ CryptoBot
@router.callback_query(F.data == "payment_cryptobot_edit")
async def payment_cryptobot_edit(call: CallbackQuery, bot: Bot, state: FSM, arSession: ARS):
    await state.set_state("here_cryptobot_token")
    await call.message.edit_text(
        "<b>ü§ñ –í–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω CryptoBot</b>\n"
        "‚ùï –ü–æ–ª—É—á–∏—Ç—å –º–æ–∂–Ω–æ –≤ @CryptoBot, –Ω–∞–ø–∏—Å–∞–≤ /wallet, –∑–∞—Ç–µ–º Crypto Pay API"
    )


# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è CryptoBot
@router.callback_query(F.data == "payment_cryptobot_check")
async def payment_cryptobot_check(call: CallbackQuery, bot: Bot, state: FSM, arSession: ARS):
    try:
        cache_message = await call.message.answer("<b>ü§ñ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è CryptoBot...</b>")
        await call.answer()

        crypto_bot_api = CryptoBotAPI(bot=bot, arSession=arSession)
        status, response = await crypto_bot_api.get_exchange_rates()

        if status:
            await cache_message.edit_text(
                "<b>‚úÖ CryptoBot –ø–æ–¥–∫–ª—é—á–µ–Ω!</b>\n"
                "‚ùï –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ"
            )
        else:
            await cache_message.edit_text(
                "<b>‚ùå CryptoBot –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω...</b>\n"
                f"<code>–û—à–∏–±–∫–∞: {response}</code>"
            )
    except Exception as ex:
        await cache_message.edit_text(
            "<b>‚ùå CryptoBot –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω...</b>\n"
            f"<code>–û—à–∏–±–∫–∞: {ex}</code>"
        )
        
# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞ CryptoBot
@router.callback_query(F.data == "payment_cryptobot_check")
async def payment_cryptobot_check(call: CallbackQuery, bot: Bot, state: FSM, arSession: ARS):
    try:
        cache_message = await call.message.answer("<b>ü§ñ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è CryptoBot...</b>")
        await call.answer()

        crypto_bot_api = CryptoBotAPI(bot=bot, arSession=arSession)
        status, response = await crypto_bot_api.check_token()

        if status:
            await cache_message.edit_text(
                "<b>‚úÖ CryptoBot –ø–æ–¥–∫–ª—é—á–µ–Ω!</b>\n"
                "‚ùï –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ"
            )
        else:
            await cache_message.edit_text(
                "<b>‚ùå CryptoBot –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω...</b>\n"
                f"<code>–û—à–∏–±–∫–∞: {response}</code>"
            )
    except Exception as ex:
        await cache_message.edit_text(
            "<b>‚ùå CryptoBot –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω...</b>\n"
            f"<code>–û—à–∏–±–∫–∞: {ex}</code>"
        )

################################ –ü–†–ò–ù–Ø–¢–ò–ï CRYPTOBOT #############################
# –ü—Ä–∏–Ω—è—Ç–∏–µ —Ç–æ–∫–µ–Ω–∞ CryptoBot
@router.message(StateFilter("here_cryptobot_token"))
async def payment_cryptobot_edit_token(message: Message, bot: Bot, state: FSM, arSession: ARS):
    await state.clear()

    cache_message = await message.answer("<b>ü§ñ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–≤–µ–¥—ë–Ω–Ω—ã—Ö CryptoBot –¥–∞–Ω–Ω—ã—Ö... üîÑ</b>")

    crypto_bot_token = message.text

    try:
        crypto_bot_api = CryptoBotAPI(
            bot=bot,
            arSession=arSession,
            token=crypto_bot_token
        )
        status, response = await crypto_bot_api.get_exchange_rates()

        if status:
            Paymentsx.update(crypto_bot_token=crypto_bot_token)
            await cache_message.edit_text(
                "<b>ü§ñ –¢–æ–∫–µ–Ω CryptoBot –±—ã–ª —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω—ë–Ω ‚úÖ</b>"
            )
        else:
            await cache_message.edit_text(
                "<b>‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ CryptoBot</b>\n"
                f"<code>–û—à–∏–±–∫–∞: {response}</code>"
            )
    except Exception as ex:
        await cache_message.edit_text(
            "<b>‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ CryptoBot</b>\n"
            f"<code>–û—à–∏–±–∫–∞: {ex}</code>"
        )

    await message.answer(
        "<b>ü§ñ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ - CryptoBot</b>",
        reply_markup=payment_cryptobot_finl(),
    )

################################################################################
#################################### –ÆMoney ####################################
# –ë–∞–ª–∞–Ω—Å –ÆMoney
@router.callback_query(F.data == "payment_yoomoney_balance")
async def payment_yoomoney_balance(call: CallbackQuery, bot: Bot, state: FSM, arSession: ARS):
    response = await YoomoneyAPI(
        bot=bot,
        arSession=arSession,
        update=call,
        skipping_error=True,
    ).balance()

    await call.message.answer(
        response,
        reply_markup=close_finl(),
    )


# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ÆMoney
@router.callback_query(F.data == "payment_yoomoney_check")
async def payment_yoomoney_check(call: CallbackQuery, bot: Bot, state: FSM, arSession: ARS):
    response = await YoomoneyAPI(
        bot=bot,
        arSession=arSession,
        update=call,
        skipping_error=True,
    ).check()

    await call.message.answer(
        response,
        reply_markup=close_finl(),
    )


# –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ÆMoney
@router.callback_query(F.data == "payment_yoomoney_edit")
async def payment_yoomoney_edit(call: CallbackQuery, bot: Bot, state: FSM, arSession: ARS):
    response = await YoomoneyAPI(
        bot=bot,
        arSession=arSession
    ).authorization_get()

    await state.set_state("here_yoomoney_token")
    await call.message.edit_text(
        ded(f"""
            <b>üîÆ –î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –ÆMoney –∫–æ—à–µ–ª—å–∫–∞</b>
            ‚ñ™Ô∏è –ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ –∏ –∞–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.
            ‚ñ™Ô∏è –ü–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –∏–ª–∏ –∫–æ–¥ –∏–∑ –∞–¥—Ä–µ—Å–Ω–æ–π —Å—Ç—Ä–æ–∫–∏.
            üîó {response}
        """),
        disable_web_page_preview=True,
    )


################################ –ü–†–ò–ù–Ø–¢–ò–ï –ÆMONEY ###############################
# –ü—Ä–∏–Ω—è—Ç–∏–µ —Ç–æ–∫–µ–Ω–∞ –ÆMoney
@router.message(StateFilter("here_yoomoney_token"))
async def payment_yoomoney_edit_token(message: Message, bot: Bot, state: FSM, arSession: ARS):
    await state.clear()

    cache_message = await message.answer("<b>üîÆ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–≤–µ–¥—ë–Ω–Ω—ã—Ö –ÆMoney –¥–∞–Ω–Ω—ã—Ö... üîÑ</b>")

    get_code = message.text

    try:
        get_code = get_code[get_code.index("code=") + 5:].replace(" ", "")
    except:
        ...

    status, token, response = await YoomoneyAPI(
        bot=bot,
        arSession=arSession,
    ).authorization_enter(str(get_code))

    if status:
        Paymentsx.update(yoomoney_token=token)

    await cache_message.edit_text(response)

    await message.answer(
        "<b>üîÆ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ - –ÆMoney</b>",
        reply_markup=payment_yoomoney_finl(),
    )
